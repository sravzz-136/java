public class merge {


	public static void mergeSort(int res[], int low, int high) {
		if (low < high) {

			int middle = (low + high) / 2;


			mergeSort(res, low, middle);
			mergeSort(res, middle + 1, high);


			merge(res, low, middle, high);
		}
	}


	public static void merge(int[] array, int left, int middle, int right) {

		int n1 = middle - left + 1;
		int n2 = right - middle;


		int[] leftArray = new int[n1];
		int[] rightArray = new int[n2];


		for (int i = 0; i < n1; i++)
			leftArray[i] = array[left + i];
		for (int j = 0; j < n2; j++)
			rightArray[j] = array[middle + 1 + j];


		int i = 0, j = 0;


		int k = left;
		while (i < n1 && j < n2) {
			if (leftArray[i] <= rightArray[j]) {
				array[k] = leftArray[i];
				i++;
			} else {
				array[k] = rightArray[j];
				j++;
			}
			k++;
		}


		while (i < n1) {
			array[k] = leftArray[i];
			i++;
			k++;
		}


		while (j < n2) {
			array[k] = rightArray[j];
			j++;
			k++;
		}
	}


	public static void printArray(int[] array) {
		for (int i : array) {
			System.out.print(i + " ");
		}
		System.out.println();
	}


	public static void main(String[] args) {
		int[] array = {12, 11, 13, 5, 6, 7};

		System.out.println("Original Array:");
		printArray(array);

		mergeSort(array, 0, array.length - 1);

		System.out.println("\nSorted Array:");
		printArray(array);
	}
}
